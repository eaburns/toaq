full_text <- text EOF
text <- space_word? discourse? EOF?
discourse <- (sentence _/fragment _)+
fragment <- (afterthought_cop<relative_clause_1, relative_clause>/relative_clause/prenex/terms/freemod) _
sentence <- afterthought_cop<sentence_1, sentence>/sentence_1
sentence_1 <- sentence_2/forethought_cop<sentence, sentence>
sentence_2 <- sentence_prefix_spaces? sentence_3
sentence_prefix_spaces <- sentence_prefix _
sentence_3 <- statement _ illocutionary?
statement <- prenex_spaces? statement_1
statement_1 <- afterthought_cop<statement_2, statement>/statement_2
statement_2 <- statement_3/forethought_cop<statement, statement>
statement_3 <- predication _ end_statement?
predication <- predicate _ terms?
prenex_spaces <- prenex _
prenex <- terms _ end_prenex
predicate <- serial_predicate
predicate_1 <- afterthought_cop<predicate_2, predicate_1>/predicate_2
predicate_2 <- forethought_cop_pred<predicate>/LU_predicate<verb_syllable>/MI_phrase<verb_syllable>/PO_phrase<verb_syllable>/MO_phrase<verb_syllable>/predicate_3
predicate_3 <- predicate_word<verb_syllable> _
serial_predicate <- serial<predicate_1>/predicate_1
serial<left> <- left _ serial_predicate
terms <- terms_2/term
terms_2 <- term _ terms
term <- linked_argument/adverb/termset/prepositional_phrase
linked_argument <- linking_word_spaces? argument
linking_word_spaces <- linking_word _
termset <- forethought_cop<terms_V, terms_V>/forethought_cop<terms_IV, terms_IV>/forethought_cop<terms_III, terms_III>/forethought_cop<terms_II, terms_II>/forethought_cop<terms_V, terms_V>
terms_II <- term _ term
terms_III <- term _ terms_II
terms_IV <- term _ terms_III
terms_V <- term _ terms_IV
argument <- afterthought_cop<arg_1, argument>/arg_1
arg_1 <- forethought_cop<argument, argument>/arg_2
arg_2 <- focus_spaces? arg_3
focus_spaces <- focus _
arg_3 <- quantifier_spaces? arg_4
quantifier_spaces <- quantifier _
arg_4 <- arg_5 _ relative_clause?
arg_5 <- (serial<arg_6>/arg_6)
arg_6 <- content_clause/afterthought_cop_pred<arg_7>/forethought_cop_pred<arg_5>/LU_predicate<arg_syllable>/MI_phrase<arg_syllable>/PO_phrase<arg_syllable>/MO_phrase<arg_syllable>/arg_7
arg_7 <- predicate_word<arg_syllable>
relative_clause <- afterthought_cop<relative_clause_1, relative_clause>/LU_phrase<relative_syllable>/relative_clause_1
relative_clause_1 <- forethought_cop<relative_clause, relative_clause>/relative_clause_2
relative_clause_2 <- afterthought_cop<relative_clause_3, statement>/relative_clause_3
relative_clause_3 <- relative_predication _ end_statement?
relative_predication <- relative_predicate _ terms?
relative_predicate <- serial<relative_predicate_1>/relative_predicate_1
relative_predicate_1 <- afterthought_cop_pred<relative_predicate_2>/forethought_cop_pred<relative_predicate>/relative_predicate_2
relative_predicate_2 <- MI_phrase<relative_syllable>/PO_phrase<relative_syllable>/MO_phrase<relative_syllable>/predicate_word<relative_syllable>
adverb <- afterthought_cop<adverb_1, adverb>/adverb_1
adverb_1 <- forethought_cop<adverb, adverb>/adverb_2
adverb_2 <- (serial<adverb_3>/adverb_3)
adverb_3 <- afterthought_cop_pred<adverb_4>/forethought_cop_pred<adverb_3>/LU_predicate<adverb_syllable>/MI_phrase<adverb_syllable>/PO_phrase<adverb_syllable>/MO_phrase<adverb_syllable>/adverb_4
adverb_4 <- predicate_word<adverb_syllable>
prepositional_phrase <- afterthought_cop<prepositional_phrase_1, prepositional_phrase>/prepositional_phrase_1
prepositional_phrase_1 <- forethought_cop<prepositional_phrase, prepositional_phrase>/prepositional_phrase_2
prepositional_phrase_2 <- preposition _ argument
preposition <- afterthought_cop<preposition_1, preposition>/preposition_1
preposition_1 <- forethought_cop<preposition, preposition>/preposition_2
preposition_2 <- serial<preposition_3>/preposition_3
preposition_3 <- afterthought_cop_pred<preposition_4>/forethought_cop_pred<preposition>/LU_predicate<preposition_syllable>/MI_phrase<preposition_syllable>/PO_phrase<preposition_syllable>/MO_phrase<preposition_syllable>/preposition_4
preposition_4 <- predicate_word<preposition_syllable>
content_clause <- afterthought_cop<content_clause_1, statement>/content_clause_1
content_clause_1 <- content_statement/LU_phrase<content_syllable>
content_statement <- content_predication _ end_statement?
content_predication <- content_predicate _ terms?
content_predicate <- serial<content_predicate_1>/content_predicate_1
content_predicate_1 <- afterthought_cop_pred<content_predicate_2>/forethought_cop_pred<content_predicate_2>/content_predicate_2
content_predicate_2 <- MI_phrase<content_syllable>/PO_phrase<content_syllable>/MO_phrase<content_syllable>/predicate_word<content_syllable>
afterthought_cop_pred<left> <- afterthought_cop<left, predicate>
forethought_cop_pred<left> <- forethought_cop<left, predicate>
afterthought_cop<left, right> <- left _ cop_bar<right>
cop_bar<right> <- connective _ right
forethought_cop<left, right> <- forethought_connective _ forethought_cop_1<left, right>
forethought_cop_1<left, right> <- left _ forethought_cop_bar<right>
forethought_cop_bar<right> <- forethought_marker _ right
forethought_connective <- forethought_marker _ connective
LU_predicate<syllable> <- LU_phrase<syllable>
LU_phrase<syllable> <- LU_word<syllable> _ statement
LU_word<syllable> <- &LU syllable
MI_phrase<syllable> <- MI_phrase_1<syllable> _ end_predicatizer?
MI_phrase_1<syllable> <- MI_word<syllable> _ MI_complement
MI_word<syllable> <- &MI syllable
MI_complement <- predicate/argument/adverb/prepositional_phrase
PO_phrase<syllable> <- PO_phrase_1<syllable> _ end_predicatizer?
PO_phrase_1<syllable> <- PO_word<syllable> _ argument
PO_word<syllable> <- &PO syllable
MO_phrase<syllable> <- MO_phrase_1<syllable> _ end_quote
MO_phrase_1<syllable> <- MO_word<syllable> space_word? discourse
MO_word<syllable> <- &MO syllable
_ <- space_or_freemod?
space_or_freemod <- (freemod/space_word) space_or_freemod?
space_word <- space+
freemod <- interjection/parenthetical/incidental/vocative
parenthetical <- parenthetical_1 _ end_parenthetical
parenthetical_1 <- start_parenthetical _ discourse
incidental <- start_incidental _ statement
vocative <- vocative_marker _ argument
word <- (non_function_word/toned_function_word/neutral_function_word) space_word?
predicate_word<syllable> <- (syllable compound_syllable+/!function_word syllable)
non_function_word <- initial_syllable compound_syllable+/!function_word initial_syllable
neutral_function_word <- !toned_function_word &function_word neutral_syllable
toned_function_word <- !neutral_syllable (LU/MI/MO/PO)
initial_syllable <- arg_syllable/relative_syllable/verb_syllable/content_syllable/preposition_syllable/adverb_syllable
focus <- &KU neutral_syllable
end_quote <- &TEO neutral_syllable
end_predicatizer <- &GA neutral_syllable
end_statement <- &NA neutral_syllable
sentence_prefix <- &KEO neutral_syllable
end_prenex <- &BI neutral_syllable
start_incidental <- &JU neutral_syllable
start_parenthetical <- &KIO neutral_syllable
end_parenthetical <- &KI neutral_syllable
vocative_marker <- &HU neutral_syllable
linking_word <- &GO neutral_syllable
connective <- &RA neutral_syllable
illocutionary <- &DA neutral_syllable/moq (questions?)
moq <- &MOQ moq_syllable
quantifier <- &TU neutral_syllable
interjection <- &BEI neutral_syllable
forethought_marker <- &TO neutral_syllable
function_word <- BI/DA/GA/GO/BEI/HU/JU/KU/KI/KIO/KEO/LU/MI/MO/MOQ/NA/PO/RA/TU/TO/TEO
BI <- (b I/p A) &(tone? boundary)
DA <- (d A/k A/s O/b A) &(tone? boundary)
MOQ <- m O q &((questions/tone)? boundary)
GA <- g A &(tone? boundary)
GO <- (g O/f I/c U/k E) &(tone? boundary)
BEI <- (b E i/m) &(tone? boundary)
HU <- h U &(tone? boundary)
JU <- j U &(tone? boundary)
KU <- k U &(tone? boundary)
KI <- k I &(tone? boundary)
KIO <- k I o &(tone? boundary)
KEO <- (k E o/j E) &(tone? boundary)
LU <- (l U/l I/l O/m A/t I o) &(tone? boundary)
MI <- (m I/s h U) &(tone? boundary)
MO <- m O &(tone? boundary)
NA <- n A &(tone? boundary)
PO <- (j E i/p O) &(tone? boundary)
RA <- (r A/r U/r I/r O i/r O/r E) &(tone? boundary)
TU <- (t A/t U/s I a/s A/h I/j A) &(tone? boundary)
TO <- t O &boundary
TEO <- t E o &(tone? boundary)
syllable<desinence, tone> <- initial (desinence/neutral_desinence tone) &boundary
neutral_syllable <- initial neutral_desinence &boundary
moq_syllable <- initial neutral_desinence &(questions boundary/boundary)
compound_syllable <- syllable<compound_desinence, compound_tone>
arg_syllable <- syllable<arg_desinence, arg_tone>
relative_syllable <- syllable<relative_desinence, relative_tone>
verb_syllable <- syllable<verb_desinence, verb_tone>
content_syllable <- syllable<content_desinence, content_tone>
preposition_syllable <- syllable<preposition_desinence, preposition_tone>
adverb_syllable <- syllable<adverb_desinence, adverb_tone>
boundary <- (initial/space/EOF)
initial <- b/c h/c/d/f/g/h/j/k/l/m/n/p/r/s h/s/t
desinence<ā, ū, ī, ō, ē> <- ā q/ā i/ā o/ā/ū q/ū a q/ū a i/ū a o/ū a/ū i/ū o q/ū o i/ū o/ū e q/ū e/ū/ī q/ī a q/ī a i/ī a o/ī a/ī u q/ī u/ī o i/ī o q/ī o/ī e q/ī e/ī/ō q/ō a q/ō a i/ō a o/ō a/ō i/ō e q/ō e/ō/ē q/ē a q/ē a i/ē a o/ē a/ē i/ē o q/ē o/ē u/ē
neutral_desinence <- desinence<a, u, i, o, e>
compound_desinence <- desinence<ā, ū, ī, ō, ē>
arg_desinence <- desinence<á, ú, í, ó, é>
relative_desinence <- desinence<ǎ, ǔ, ǐ, ǒ, ě>
verb_desinence <- desinence<ả, ủ, ỉ, ỏ, ẻ>
content_desinence <- desinence<â, û, î, ô, ê>
preposition_desinence <- desinence<à, ù, ì, ò, è>
adverb_desinence <- desinence<ã, ũ, ĩ, õ, ẽ>
tone <- compound_tone/arg_tone/verb_tone/relative_tone/adverb_tone/preposition_tone/content_tone
A <- ā/á/ǎ/ả/â/à/ã/a
U <- ū/ú/ǔ/ủ/û/ù/ũ/u
I <- ī/í/ǐ/ỉ/î/ì/ĩ/i
O <- ō/ó/ǒ/ỏ/ô/ò/õ/o
E <- ē/é/ě/ẻ/ê/è/ẽ/e
ā <- [āĀ]/a (macron_combiner/compound_tone)
ū <- [ūŪ]/u (macron_combiner/compound_tone)
ī <- [īĪ]/i (macron_combiner/compound_tone)
ō <- [ōŌ]/o (macron_combiner/compound_tone)
ē <- [ēĒ]/e (macron_combiner/compound_tone)
macron_combiner "◌̄" <- "\u0304"
compound_tone <- [\-1]
á <- [áÁ]/a (acute_combiner/arg_tone)
ú <- [úÚ]/u (acute_combiner/arg_tone)
í <- [íÍ]/i (acute_combiner/arg_tone)
ó <- [óÓ]/o (acute_combiner/arg_tone)
é <- [éÉ]/e (acute_combiner/arg_tone)
acute_combiner "◌́" <- "\u0301"
arg_tone <- [/2]
ǎ <- [ǎǍăĂ]/a (caron_combiner/breve_combiner/relative_tone)
ǔ <- [ǔǓŭŬ]/u (caron_combiner/breve_combiner/relative_tone)
ǐ <- [ǐǏĭĬ]/i (caron_combiner/breve_combiner/relative_tone)
ǒ <- [ǒǑŏŎ]/o (caron_combiner/breve_combiner/relative_tone)
ě <- [ěĚĕĔ]/e (caron_combiner/breve_combiner/relative_tone)
caron_combiner "◌̌" <- "\u030c"
breve_combiner "◌̆" <- "\u0306"
relative_tone <- [V3]
ả <- [ảẢ]/a (hook_combiner/verb_tone)
ủ <- [ủỦ]/u (hook_combiner/verb_tone)
ỉ <- [ỉỈ]/i (hook_combiner/verb_tone)
ỏ <- [ỏỎ]/o (hook_combiner/verb_tone)
ẻ <- [ẻẺ]/e (hook_combiner/verb_tone)
hook_combiner "◌̉" <- "\u0309"
verb_tone <- [?4]
â <- [âÂ]/a (circumflex_combiner/content_tone)
û <- [ûÛ]/u (circumflex_combiner/content_tone)
î <- [îÎ]/i (circumflex_combiner/content_tone)
ô <- [ôÔ]/o (circumflex_combiner/content_tone)
ê <- [êÊ]/e (circumflex_combiner/content_tone)
circumflex_combiner "◌̂" <- "\u0302"
content_tone <- [5\^]
à <- [àÀ]/a (grave_combiner/preposition_tone)
ù <- [ùÙ]/u (grave_combiner/preposition_tone)
ì <- [ìÌ]/i (grave_combiner/preposition_tone)
ò <- [òÒ]/o (grave_combiner/preposition_tone)
è <- [èÈ]/e (grave_combiner/preposition_tone)
grave_combiner "◌̀" <- "\u0300"
preposition_tone <- [\\6]
ã <- [ãÃ]/a (tilde_combiner/adverb_tone)
ũ <- [ũŨ]/u (tilde_combiner/adverb_tone)
ĩ <- [ĩĨ]/i (tilde_combiner/adverb_tone)
õ <- [õÕ]/o (tilde_combiner/adverb_tone)
ẽ <- [ẽẼ]/e (tilde_combiner/adverb_tone)
tilde_combiner "◌̃" <- "\u0303"
adverb_tone <- [~7]
a <- [aA]
b <- [bB]
c <- [cC]
d <- [dD]
e <- [eE]
f <- [fF]
g <- [gG]
h <- [hH]
i <- [ıiI]
j <- [jJ]
k <- [kK]
l <- [lL]
m <- [mM]
n <- [nN]
o <- [oO]
p <- [pP]
q <- [qQ]
r <- [rR]
s <- [sS]
t <- [tT]
u <- [uU]
w <- [wW]
y <- [yY]
space "space" <- ([\t\n\r .,:!]/punctuation)+
punctuation <- !tone . &{…}
questions <- ("?"+)
EOF "EOF" <- !.
